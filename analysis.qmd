---
title: Analysis
description: Here we provide a detailed analysis using more sophisticated statistics techniques.
toc: true
draft: false
---

![](images/race.png)

## Introduction
------------------------------------------------------------------------  
In today's increasingly complex socioeconomic, understanding the interplay between household composition, educational attainment, and racial demographics is crucial for devising strategies that promote economic equity. Our project seeks to delve into how these factors collectively influence individual income levels across different racial groups. By examining the effects of household weight — a proxy for household size and composition — alongside the educational levels of individuals, we aim to uncover insights into the socioeconomic dynamics that shape income disparities. The intersection of race adds a critical dimension to this analysis, providing a comprehensive understanding of the diverse experiences across demographic groups.


## Motivation Questions
------------------------------------------------------------------------
Household Weight and Income: How does household weight influence income across different racial groups, and to what extent does it vary between them?

Education and Income: What is the impact of education level on income within these racial categories? How significant is this impact when compared to other demographic factors?

Combined Effects: How do household weight and education interact to influence income across different racial groups?


## Visualizations of interested variables and relationships
------------------------------------------------------------------------
```{r include = FALSE}

## Loading Clean Data
library(here)
# Set the path to the RDS file
cleaned_dataset_path_rds <- here("dataset", "cleaned_NYSERDA_LMI_Census_2013-2015.rds")

# Load the dataset from the RDS file
clean_data <- readRDS(cleaned_dataset_path_rds)

head(clean_data)
```

### 1. Education and Income

#### Analyzing education level by race/ethnicity

```{r include = FALSE}
library(ggplot2)
library(reshape2)

# Creating a cross-tabulation of Race / Ethnicity and Education Level
ct <- table(clean_data$`Race_Ethnicity`, clean_data$`Education_Level`)

# Melting the table for ggplot
ct_melted <- melt(ct)

# Plotting with counts in each box
ggplot(ct_melted, aes(x = Var2, y = Var1, fill = value)) +
  geom_tile() +  
  geom_text(aes(label = value), color = "white", size = 4) +  # Showing the count
  scale_fill_gradient(low = "lightblue", high = "blue") +
  labs(x = "Education Level", y = "Race / Ethnicity", fill = "Count",
       title = "Heatmap of Education Level by Race / Ethnicity") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```
```{r echo = FALSE}
# Same as before but with percentages of each education level
ct_percent <- prop.table(ct, 2) * 100
ct_percent_melted <- melt(ct_percent)

# Plotting with percentage in each box
ggplot(ct_percent_melted, aes(x = Var2, y = Var1, fill = value)) +
  geom_tile() +  
  geom_text(aes(label = sprintf("%.1f%%", value)), color = "white", size = 4) +  # showing percentage
  scale_fill_gradient(low = "lightblue", high = "blue") +  
  labs(x = "Education Level", y = "Race / Ethnicity", fill = "Percentage",
       title = "Heatmap of Education Level by Race / Ethnicity (Percentage)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r include = FALSE}
library(ggplot2)
library(dplyr)
library(readr)
library(here)
library(caret)
library(tidyverse)  # For data manipulation
library(modelr)     # For weighted regression

```

```{r include = FALSE}
# Load the dataset
clean_data <- readRDS(here("dataset", "cleaned_NYSERDA_LMI_Census_2013-2015.rds"))
```


### 2. Household Weight and Income

#### Household Characteristics 

```{r echo = FALSE}
weighted_counts <- clean_data %>%
  group_by(`Race_Ethnicity`, `Owner_Renter_Status`) %>%
  summarise(Weighted.Count = sum(`Household_Weight`), .groups = 'drop')

# Plot
ggplot(weighted_counts, aes(x=`Race_Ethnicity`, y=Weighted.Count, fill=`Owner_Renter_Status`)) +
  geom_bar(stat="identity", position=position_dodge()) +
  labs(title="Weighted Housing Status Distribution by Race / Ethnicity",
       x="Race / Ethnicity", y="Weighted Count") +
  scale_y_continuous(labels = scales::comma) +
  scale_fill_brewer(palette="Set1") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

#### Weighted Household proportions by Income groups in each Race/Ethnicity
```{r echo = FALSE}
# Option 1

# Calculating weighted proportions
grouped_data <- clean_data %>%
  group_by(Race = `Race_Ethnicity`, Income = `Income_Groups`) %>%
  summarise(Weighted_Count = sum(`Household_Weight`), .groups = 'drop')

total_weights_per_race <- grouped_data %>%
  group_by(Race) %>%
  summarise(Total_Weight = sum(Weighted_Count), .groups = 'drop')

grouped_data <- grouped_data %>%
  left_join(total_weights_per_race, by = "Race") %>%
  mutate(Proportion = Weighted_Count / Total_Weight)

# stacked bar plot
ggplot(grouped_data, aes(x = Race, y = Proportion, fill = Income)) +
  geom_bar(stat = "identity") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Household Weight by Income Groups and Race/Ethnicity",
       x = "Race / Ethnicity",
       y = "Proportion") +
  scale_fill_brewer(palette = "Paired")
```

```{r echo = FALSE}
# Option 2

# Calculating weighted proportions
plot_data <- clean_data %>%
  group_by(`Race_Ethnicity`, `Income_Groups`) %>%
  summarise(Weighted_Count = sum(`Household_Weight`), .groups = 'drop') %>%
  group_by(`Race_Ethnicity`) %>%
  mutate(Total_Weight = sum(Weighted_Count)) %>%
  mutate(Proportion = Weighted_Count / Total_Weight)

# Creating weighted histograms
ggplot(plot_data, aes(x = `Income_Groups`, y = Proportion, fill = `Income_Groups`)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_wrap(~`Race_Ethnicity`, scales = "free_x") +
  scale_y_continuous(labels = scales::percent_format()) +
  labs(title = "Household Weight distribution by Income Groups and Race/Ethnicity",
       x = "Income Groups",
       y = "Weighted Proportion") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```


### 3. Household Weight and Education

#### Analyzing Impact of Race/Ethnicity on Educational Outcomes:

```{r echo = FALSE}
weighted_education_counts <- clean_data %>%
  group_by(`Race_Ethnicity`, `Education_Level`) %>%
  summarise(Weighted.Count = sum(`Household_Weight`), .groups = 'drop')

# Plot
ggplot(weighted_education_counts, aes(x=`Race_Ethnicity`, y=Weighted.Count, fill=`Education_Level`)) +
  geom_bar(stat="identity", position=position_dodge()) +
  labs(title="Weighted Education Level Distribution by Race / Ethnicity",
       x="Race / Ethnicity", y="Weighted Count") +
  scale_y_continuous(labels = scales::comma) +  
  scale_fill_viridis_d() +  
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  theme(legend.position="right")
```


#### 4. Geographical Map

```{r include = FALSE}
library(sf)
ny_counties <- st_read("dataset-ignore/tl_2023_us_county.shp")
demographic_data <- clean_data  

ny_counties <- ny_counties[ny_counties$STATEFP == '36', ]

#head(ny_counties)
```


```{r echo = FALSE}
#install.packages("modeest")
library(modeest)

# Loading geographic data
ny_counties_sf <- st_as_sf(ny_counties)

# Definitions for mapping income to numeric values
income_levels <- c("$0 to <$10,000" = 5000,
                   "$10,000-<$20,000" = 15000,
                   "$20,000-<$30,000" = 25000,
                   "$30,000-<$40,000" = 35000,
                   "$40,000-<$50,000" = 45000,
                   "$50,000+" = 75000)

# Adding a numeric income column to the demographic data
demographic_data <- demographic_data %>%
  mutate(Income_Numeric = income_levels[as.character(Income_Groups)])

#Adding the average wage from the combined dataset 
dataset_to_combine <- read.csv("combining-dataset/Quarterly_Census_of_Employment_and_Wages_Annual_Data__Beginning_2000_20240415.csv", stringsAsFactors = FALSE) |>
    mutate_if(is.character, str_trim) # Trim leading and trailing whitespace from all character columns

county_avg_wage <- 
  filter(dataset_to_combine, Area.Type == "County") |>
  group_by(Area) |>
  summarise(Total_Wages = sum(`Total.Wage`, na.rm = TRUE),
            Total_Employment = sum(`Average.Employment`, na.rm = TRUE)) |>
  mutate(Average_Wage = Total_Wages / Total_Employment) |>
  rename(County = Area) |>
  mutate(County = str_replace_all(County, fixed(" County"), "")) |>
  select(-c(Total_Wages, Total_Employment))

#make a table with racial proportion for each race in each county 
race_proportion <- demographic_data |>
  group_by(Race_Ethnicity, County) |>
  summarise(count=n(), .groups = 'drop') |>
  group_by(County) |>
  mutate(total = sum(count)) |>
  ungroup() |>
  mutate(proportion = count / total) %>%
  select(-count, -total) %>%
  pivot_wider(names_from = Race_Ethnicity, values_from = proportion)

# Aggregating demographic data to find least common race, average income, and most common education level
demographic_data_aggregated <- demographic_data %>%
  group_by(County) %>%
  summarise(
    Least_Common_Race_Ethnicity = names(sort(table(Race_Ethnicity), decreasing = FALSE))[1],
    Most_Common_Education_Level = names(sort(table(Education_Level), decreasing = TRUE))[1],
    Average_Income = weighted.mean(Income_Numeric, Household_Weight, na.rm = TRUE),
    .groups = 'drop'
  )|>
  left_join(county_avg_wage, by = "County") |>
  left_join(race_proportion, by = "County")

# Merging
merged_data <- ny_counties_sf %>%
  left_join(demographic_data_aggregated, by = c("NAME" = "County"))
```


#### 5. Static Maps 

```{r echo = FALSE}
library(scales) 

# Color palettes for the maps
colors <- scale_fill_brewer(palette = "Pastel1", na.value = "grey50", guide = "legend")
income_colors <- scale_fill_viridis_c(
  name = "Average Income",
  labels = dollar_format(prefix="$"),
  na.value = "grey50"
)
education_colors <- scale_fill_brewer(palette = "Set3", guide = "legend")
race_color <- scale_fill_gradient(low = "lightgreen", high = "darkgreen", 
                      na.value = "grey50", name = "Proportion")

# Plotting map for Least Common Race/Ethnicity by County
race_map <- ggplot(data = merged_data) +
  geom_sf(aes(fill = Least_Common_Race_Ethnicity), color = "black", size = 0.25) +
  colors +
  labs(
    title = "Least Common Race/Ethnicity by County",
    fill = "Race/Ethnicity"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom")

# Plotting map for the proportion of Black population by County 
black_map <- ggplot(data = merged_data) +
  geom_sf(aes(fill = `Black, non-Hispanic`), color = "black", size = 0.25) +
  race_color +
  labs(
    title = "Proportion of Black/AA Population by County in New York",
    fill = "Black/AA Population"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom",
        legend.text = element_text(angle = 45, hjust = 1),
        legend.key.size = unit(1.5, "lines")) 

# Plotting map for the proportion of White population by County
# there could be a similar map

#Plotting map for Average wage (from combined dataset) by County
wage_map <- ggplot(data = merged_data) +
  geom_sf(aes(fill = Average_Wage), color = "black", size = 0.25) +
  income_colors +
  labs(
    title = "Average Wage by County in New York",
    fill = "Average Wage"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom",
        legend.text = element_text(angle = 45, hjust = 1),
        legend.key.size = unit(1.5, "lines")) 

# Plotting map for Average Income by County
income_map <- ggplot(data = merged_data) +
  geom_sf(aes(fill = Average_Income), color = "black", size = 0.25) +
  income_colors +
  labs(
    title = "Average Income by County in New York",
    fill = "Average Income"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom",
        legend.text = element_text(angle = 45, hjust = 1),
        legend.key.size = unit(1.5, "lines")) 

# Plotting map for Most Common Education Level by County
education_map <- ggplot(data = merged_data) +
  geom_sf(aes(fill = Most_Common_Education_Level), color = "black", size = 0.25) +
  scale_fill_brewer(palette = "Set3", guide = guide_legend(title = "Education Level", title.position = "top", title.hjust = 0.5, label.hjust = .5)) +
  labs(
    title = "Most Common Education Level by County",
    fill = "Education Level"
  ) +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    legend.text = element_text(size = 8), 
    legend.title = element_text(size = 10), 
    legend.key.size = unit(1, "lines"), 
    legend.text.align = 0, 
    legend.box = "vertical" 
  )

# Print the maps
print(race_map)
print(income_map)
print(education_map)
print(wage_map)
print(black_map)
```

#### 6. Interactive Version


```{r echo = FALSE}
# install.packages("leaflet")
library(RColorBrewer)
library(leaflet)

palette <- brewer.pal(9, "Pastel1")
palette[length(palette)] <- "#8FBC8F"  

# Creating color factors for each category
race_colors <- colorFactor(palette, domain = merged_data$Least_Common_Race_Ethnicity, na.color = "grey50")
income_colors <- colorNumeric(palette = "viridis", domain = merged_data$Average_Income, na.color = "grey50")
education_colors <- colorFactor(brewer.pal(9, "Set3"), domain = merged_data$Most_Common_Education_Level, na.color = "grey50")

# Create the interactive leaflet map
interactive_map <- leaflet(merged_data) %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  addPolygons(
    fillColor = ~race_colors(Least_Common_Race_Ethnicity),
    color = "#444444",
    weight = 1,
    opacity = 1,
    fillOpacity = 0.7,
    popup = ~paste(NAME, "<br>", "Least Common Race/Ethnicity: ", Least_Common_Race_Ethnicity),
    group = "Race/Ethnicity",
    highlightOptions = highlightOptions(
      weight = 3,
      color = "#666",
      fillOpacity = 0.7,
      bringToFront = TRUE
    )
  ) %>%
  addPolygons(
    fillColor = ~income_colors(Average_Income),
    color = "#444444",
    weight = 1,
    opacity = 1,
    fillOpacity = 0.7,
    popup = ~paste(NAME, "<br>", "Average Income: ", dollar_format()(Average_Income)),
    group = "Average Income"
  ) %>%
  addPolygons(
    fillColor = ~education_colors(Most_Common_Education_Level),
    color = "#444444",
    weight = 1,
    opacity = 1,
    fillOpacity = 0.7,
    popup = ~paste(NAME, "<br>", "Most Common Education Level: ", Most_Common_Education_Level),
    group = "Education Level"
  ) %>%
  addLegend("bottomright", pal = race_colors, values = ~Least_Common_Race_Ethnicity, title = "Race/Ethnicity",
            opacity = 0.7, group = "Race/Ethnicity") %>%
  addLegend("bottomright", pal = income_colors, values = ~Average_Income, title = "Average Income",
            opacity = 0.7, group = "Average Income", labFormat = labelFormat(prefix = "$")) %>%
  addLegend("bottomright", pal = education_colors, values = ~Most_Common_Education_Level, title = "Education Level",
            opacity = 0.7, group = "Education Level") %>%
  addLayersControl(
    baseGroups = c("Race/Ethnicity", "Average Income", "Education Level"),
    options = layersControlOptions(collapsed = FALSE)
  )

print(interactive_map)
```


## Statistical Modelling

#### Model 1: Linear Regression between black, white, hispanic, asian population proportion and Average wage at county level

```{r echo = FALSE}
#linear model
modellm<-lm(Average_Wage ~ `Black, non-Hispanic`+`Hispanic`+`Asian, non-Hispanic`+`White, non-Hispanic`, data = demographic_data_aggregated)
summary(modellm)

model_white <- lm(Average_Wage ~ `White, non-Hispanic`, data = demographic_data_aggregated)
summary(model_white)

plot(x = demographic_data_aggregated$`Black, non-Hispanic`, y = demographic_data_aggregated$Average_Wage) 
plot(x = demographic_data_aggregated$`White, non-Hispanic`, y = demographic_data_aggregated$Average_Wage) 
```

#### Model 2: Linear Regression between Household weight, Education, Income group, Race/Ethnicity, Owner/Renter Status, Household Type

```{r echo = FALSE}
clean_data$Education_Level <- as.factor(clean_data$Education_Level)
clean_data$Race_Ethnicity <- as.factor(clean_data$Race_Ethnicity)
clean_data$Income_Groups <- as.factor(clean_data$Income_Groups)
clean_data$Economic_Development_Region <- as.factor(clean_data$Economic_Development_Region)
clean_data$Owner_Renter_Status <- as.factor(clean_data$Owner_Renter_Status)
clean_data$Household_Type <- as.factor(clean_data$Household_Type)

# Linear model
model_linear <- lm(Household_Weight ~ Education_Level + Race_Ethnicity + Income_Groups + Economic_Development_Region + Owner_Renter_Status + Household_Type, data = clean_data)
summary(model_linear)

# Diagnostic plots to check for assumptions
par(mfrow=c(2,2))
model_linear
```

#### Model 3: Multinomial logistic regression with Race_Ethnicity as the dependent variable
```{r echo = FALSE}
library(nnet)
clean_data$Race_Ethnicity <- as.factor(clean_data$Race_Ethnicity)
clean_data$Education_Level <- as.factor(clean_data$Education_Level)
clean_data$Income_Groups <- as.factor(clean_data$Income_Groups)
clean_data$Economic_Development_Region <- as.factor(clean_data$Economic_Development_Region)
clean_data$Owner_Renter_Status <- as.factor(clean_data$Owner_Renter_Status)

# Multinomial logistic regression
multinom_model <- multinom(Race_Ethnicity ~ Education_Level + Income_Groups + Household_Weight + Owner_Renter_Status, data = clean_data)

# Summary of the model
summary(multinom_model)
```


#### Model 4: Multinomial logistic regression with Income disparity across Education, Household Weight, and Race Ethnicity

Multinomial logistic regression is particularly suited for scenarios where the response variable is categorical and consists of more than two categories. In this study, the response variable, income, is inherently categorical with distinct income groups (such as "$0 to <$10,000", "$10,000-<$20,000", etc.), making multinomial logistic regression an appropriate choice. 

```{r}
cleaned_dataset_path_rds <- here("dataset", "cleaned_NYSERDA_LMI_Census_2013-2015.rds")
clean_data <- readRDS(cleaned_dataset_path_rds)
clean_data$OwnerStatue<-ifelse(clean_data$"Owner_Renter_Status"=="Own",1,0)
clean_data$`Income_Numeric` <- case_when(
  clean_data$`Income_Groups` == "$0 to <$10,000" ~ 5,
  clean_data$`Income_Groups` == "$10,000-<$20,000" ~ 15,
  clean_data$`Income_Groups` == "$20,000-<$30,000" ~ 25,
  clean_data$`Income_Groups` == "$30,000-<$40,000" ~ 35,
  clean_data$`Income_Groups` == "$40,000-<$50,000" ~ 45,
  clean_data$`Income_Groups` == "$50,000+" ~ 55,
  TRUE ~ NA_real_)
# Model fitting 
multinom_model <- multinom(Income_Groups ~ Education_Level + Household_Weight + Race_Ethnicity, data = clean_data)
summary(multinom_model) 
```
I focused on key variables known to impact income based on socioeconomic research: education level, household weight, and race/ethnicity. These predictors are grounded in the hypothesis that higher educational attainment and specific racial/ethnic backgrounds correlate with different income levels, while household weight can reflect economic pressures or resources that influence income potential. 

However, due to the nature of logistic regression, the results are in terms of odds ratios, which might introduce some complexity in direct interpretation. There is inherent uncertainty in these estimates, as they are influenced by the model's assumptions, the choice of included variables, and the data's representativeness. 

#### Using Anova to get pvalue for the statistical significant for each coefficient
```{r echo = FALSE}
library(car)
anova_results <- Anova(multinom_model)
print(anova_results)
```
The output from the ANOVA suggests that all the predictors in multinomial logistic regression Education Level, Household Weight, and Race/Ethnicity—are highly statistically significant in predicting the different income groups. 
Education Level has a particularly strong influence on income group classification, as indicated by a very high likelihood ratio chi-square statistic (LR Chisq) of 44277 with 25 degrees of freedom and a p-value less than 0.0001. Race/Ethnicity shows substantial influence with an LR Chisq of 2140 and a p-value less than 0.0001, and Household Weight also proves significant with an LR Chisq of 257. 


#### 95% Confidence Interval on Coefficients on each variable
```{r echo = FALSE}
# Get model coefficients and standard errors
coef_matrix <- summary(multinom_model)$coefficients
se_matrix <- summary(multinom_model)$standard.errors
# Calculate lower and upper bounds of the 95% confidence intervals
ci_lower <- coef_matrix - 1.96 * se_matrix
ci_upper <- coef_matrix + 1.96 * se_matrix

#extrac outcome group 
predictors = colnames(coef_matrix)
outcome_groups = rownames(coef_matrix)

# Initialize an empty data frame to hold detailed CI data
detailed_ci_data <- data.frame()

# Loop through each outcome group to append data
for (i in 1:nrow(coef_matrix)) {
  temp_data <- data.frame(
    Outcome_Group = outcome_groups[i],
    Predictor = predictors,
    Estimate = coef_matrix[i, ],
    CI_Lower = ci_lower[i, ],
    CI_Upper = ci_upper[i, ]
  )
  detailed_ci_data <- rbind(detailed_ci_data, temp_data)
}

colnames(detailed_ci_data) <- c("Outcome_Group", "Predictor", "Estimate", "CI Lower", "CI Upper")
filtered_data <- detailed_ci_data[
  detailed_ci_data$Outcome_Group %in% c("$50,000+",
                                        "$40,000-<$50,000",
                                        "$30,000-<$40,000",
                                        "$20,000-<$30,000",
                                        "$10,000-<$20,000",
                                        "$0 to <$10,000") & 
    grepl("Education_Level", detailed_ci_data$Predictor), ]
print(filtered_data)

# Perform the merge
filtered_data <- filtered_data %>%
  rename(Income_Groups = Outcome_Group)
filtered_data <- merge(filtered_data, clean_data[c("Income_Groups", "Race_Ethnicity")], by = "Income_Groups", all.x = TRUE)

# Ensure 'Race_Ethnicity' is a factor if it's intended to be used as a color differentiator
filtered_data$Race_Ethnicity <- factor(filtered_data$Race_Ethnicity)

```
Education appears to have a strong influence, with higher levels of education generally increasing income level. Race/ethnicity also shows significant differences in income distribution, reflecting socioeconomic disparities.

Household Weight The coefficients are very small and negative across all income brackets, suggesting a slight decrease in the likelihood of being in higher income brackets with an increase in household weight, though the effect appears to be very minimal.Education Levels High School Diploma (Education_Level2): Positive coefficients across lower income brackets, suggesting that having a high school diploma, relative to having less than a high school education, increases the likelihood of being in these lower income brackets compared to the highest income bracket. The coefficient decreases as the income bracket increases.

Some College (Education_Level3): A mix of negative and positive coefficients across income brackets, suggesting a variable effect but generally showing a similar pattern to having a high school diploma. Coefficients are generally smaller than those for high school education.

Associate's Degree (Education_Level4): Increasing positive coefficients across higher income brackets, indicating that having an Associate's degree increases the likelihood of being in these higher income brackets relative to the highest income bracket.

Bachelor's Education (Education_Level5): Negative coefficients in lower income brackets and positive in higher, particularly strong in the highest income brackets, suggesting that a Bachelor's degree significantly increases the likelihood of being in higher income brackets.

Graduate Degree (Education_Level6): Strong positive coefficients as income increases, indicating a very strong likelihood of being in higher income brackets with a graduate degree. Race/Ethnicity.


#### Visualize of Coefidence Intervals for Education on Income 
```{r}
#Plot coef interval #Graph not print
ggplot(filtered_data, aes(x = Predictor, y = Estimate, ymin = `CI Lower`, ymax = `CI Upper`,color=Race_Ethnicity)) + 
  geom_pointrange() +
  geom_line()+
  facet_wrap(~Income_Groups) +
  labs(title = "Confidence Intervals for Model Coefficients", x = "Predictor", y = "Coefficient Estimate") +
  theme_minimal()+
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
```
Fixed Hispanic: Negative coefficients across almost all income brackets, suggesting that being Hispanic decreases the likelihood of being in higher income brackets relative to the highest income bracket.

Other Race: Mixed effects, with generally negative coefficients across the income brackets.

White, non-Hispanic: Positive coefficients in all income brackets, with an increasing trend as income increases, suggesting that being White, non-Hispanic increases the likelihood of being in higher income brackets relative to the highest income bracket.

Black, non-Hispanic: Negative coefficients in all income brackets, suggesting that being Black, non-Hispanic decreases the likelihood of being in higher income brackets relative to the highest income bracket.


#### Impact of Household Weights on Income
```{r}
# Generate a sequence of household weights for predictions[ ok ]
weight_range <- seq(min(clean_data$Household_Weight, na.rm = TRUE),
                    max(clean_data$Household_Weight, na.rm = TRUE), length.out = 100)

# Create pred_data ensuring OwnerStatue remains numeric
pred_data <- expand.grid(
  Household_Weight = weight_range,
  Education_Level = levels(clean_data$Education_Level)[1],
  OwnerStatue = 0,  # Explicitly set as numeric zero
  Race_Ethnicity = levels(clean_data$Race_Ethnicity)[1]
)

# Ensure that factors are correctly set, particularly for OwnerStatue [ok]
pred_data$Education_Level <- factor(pred_data$Education_Level, levels = levels(clean_data$Education_Level))
pred_data$OwnerStatue <- factor(pred_data$OwnerStatue, levels = levels(clean_data$OwnerStatue))  # Ensuring it's a factor

# Now, use the pred_data for prediction[ok]
predicted_probs <- predict(multinom_model, newdata = pred_data, type = "probs") 
prob_data <- as.data.frame(predicted_probs)
prob_data$Household_Weight <- weight_range  # Add Household_Weight to the data frame for plotting

# Convert the data frame to long format for easier plotting with ggplot2 [ok]
prob_data_long <- pivot_longer(prob_data, 
                               cols = -Household_Weight, 
                               names_to = "Income_Group", 
                               values_to = "Probability")

# Plotting [ok]: casual relationship establised
ggplot(prob_data_long, aes(x = Household_Weight, y = Probability, color = Income_Group)) +
  geom_line() +
  labs(title = "Predicted Probability of Income Groups by Household Weight",
       x = "Household Weight", y = "Probability") +
  theme_minimal()
```
The graph depicting the predicted probability of income groups by household weight reveals distinct trends across different income brackets. The probability of being in the lowest income group (\$0 to \<\$10,000) increases significantly as household weight increases, suggesting that larger household sizes may be associated with lower incomes. Conversely, the probability of being in the highest income bracket (\$50,000+) decreases as household weight increases. For the middle income groups, from \$10,000 to \<\$50,000, there is a relatively steady decrease in probability with increasing household weight, though the magnitude of change is less pronounced than in the lowest and highest income groups. This visual representation indicates a clear negative association between household weight and higher income levels, supporting the interpretation that larger households tend to have lower per capita incomes.


#### Multinomial regression on the impact of Education Level, Race Ethnicity on Income Group
```{r}
library(nnet)
library(tidyr)
multinom_model <- multinom(Income_Groups ~ Education_Level + Race_Ethnicity, data = clean_data)
# Prediction grid based on unique levels of Education and Race
pred_grid <- expand.grid(
  Education_Level = levels(clean_data$Education_Level),
  Race_Ethnicity = levels(clean_data$Race_Ethnicity)
)

# Predict probabilities for each combination
predicted_probs <- predict(multinom_model, newdata = pred_grid, type = "probs")
prob_data <- cbind(pred_grid, as.data.frame(predicted_probs))

# Assuming predicted probabilities columns are named directly as income groups
prob_data_long <- pivot_longer(prob_data, 
                               cols = -c(Education_Level, Race_Ethnicity),  # excluding predictor columns
                               names_to = "Income_Group", 
                               values_to = "Probability")


ggplot(prob_data_long, aes(x = Education_Level, y = Probability, group = Race_Ethnicity, color = Race_Ethnicity)) +
  geom_point() +  # Use points to represent the probabilities
  geom_line() +   # Connect the points with lines
  facet_wrap(~ Income_Group) +
  labs(title = "Predicted Probability of Income Groups by Education Level and Race",
       x = "Education Level", y = "Probability") +
  scale_x_discrete(limits = levels(prob_data_long$Education_Level)) + # Ensure the education levels are in order
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # To prevent overlapping text on x-axis

```
The graph displaying the predicted probability of income groups by education level and race reveals significant racial disparities in economic outcomes. Notably, the probability of being in the highest income bracket ($50,000+) clearly increases with higher education levels for all racial groups, but the slope is steeper and higher for White, non-Hispanic individuals compared to other racial groups, indicating a greater likelihood of reaching higher income levels with increased education. In contrast, Black, Hispanic, and Other racial groups show consistently lower probabilities of being in this income bracket, even at higher educational levels, suggesting systemic barriers or disparities in the conversion of educational attainment into economic success. This visualization underscores the complex interplay of race, education, and income, highlighting persistent inequality in economic opportunities across different racial and ethnic groups.